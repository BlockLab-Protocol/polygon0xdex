import { useEffect, useState } from "react";
import { WagmiConfig, createConfig } from "wagmi";
import { ConnectKitProvider, ConnectKitButton, getDefaultConfig } from "connectkit";
import type { AppProps } from "next/app";
import { polygon, mainnet, goerli, arbitrum, avalanche, bsc, celo, fantom, optimism, zkSync, polygonMumbai } from "wagmi/chains";
import ConnectionStatus from "../Utils/ConnectionStatus";
import "@/styles/globals.css";
import Head from "next/head";
import Header from "../Utils/Header";
import Footer from "../Utils/Footer";
import Logo from "../Utils/Logo";

require('dotenv').config();

// Import other dependencies and configurations

const alchemyId = process.env.ALCHEMY_ID;
const walletConnectProjectId: string = process.env.WALLET_CONNECT_PROJECT_ID || "";
//const walletConnectProjectId = process.env.WALLETCONNECT_PROJECT_ID;
const chains = [polygon, mainnet, goerli, arbitrum, avalanche, bsc, celo, fantom, optimism, zkSync, polygonMumbai];
const config = createConfig(
  getDefaultConfig({
    appName: "Blocklab-Protocol",
    alchemyId,
    walletConnectProjectId,
    chains,
    appDescription: "BLOCKSWAP-OX",
    appUrl: "https://family.co", // your app's URL
    appIcon: "https://family.co/logo.png", // your app's icon, no bigger than 1024x1024px (max. 1MB)
  })
);

export default function App({ Component, pageProps }: AppProps) {
  const [mounted, setMounted] = useState(false);
  useEffect(() => setMounted(true), []);

  return (
<> 
<Head>
				<title>BLOCKLAB-PROTOCOL | BLOCKSWAP-0X</title>
				<meta
					name="description"
					content="Generated by create-wc-dapp"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
</Head>
<Header/>


<div>
    <div style={{ padding: "20px" }}>
      <WagmiConfig config={config}>
      <div>
        <ConnectKitProvider
          theme="auto"
          mode="auto"
          options={{
            disclaimer: (
              <>
                By connecting your wallet you agree to the{" "}
                <a
                  target="_blank"
                  rel="noopener noreferrer"
                  href="https://en.wikipedia.org/wiki/Terms_of_service"
                >
                  Terms of Service
                </a>{" "}
                and{" "}
                <a
                  target="_blank"
                  rel="noopener noreferrer"
                  href="https://en.wikipedia.org/wiki/Privacy_policy"
                >
                  Privacy Policy
                </a>
              </>
            ),
          }}
        >
          {mounted && <Component {...pageProps} />}
          <div style={{ position: "fixed", top: 70, right: 5 }}>
                <ConnectKitButton />
              </div>
              <div style={{ position: "fixed", top: 110, right: 5 }}>
                <ConnectionStatus />
              </div>
              <div> <Logo /> </div>
             {/* <div><Footer/></div>*/}
        </ConnectKitProvider>
      </div>
      </WagmiConfig>
      
    </div>
 
</div>
<Footer />
</>
 
  );
 
}














/*

require('dotenv').config();
import "@/styles/globals.css";
//import type { AppProps } from "next/app";
import { WagmiConfig, createConfig, Chain } from "wagmi";
import {
  ConnectKitProvider,
  ConnectKitButton,
  getDefaultConfig,
} from "connectkit";
import type { AppProps } from "next/app";
import { useEffect, useState } from "react";
import { polygon, mainnet, goerli, arbitrum, avalanche, bsc, celo, fantom, optimism, zkSync, polygonMumbai } from "wagmi/chains";



const alchemyId = process.env.ALCHEMY_ID;
const walletConnectProjectId = process.env.WALLETCONNECT_PROJECT_ID;
const chains = [polygon, mainnet, goerli, arbitrum, avalanche, bsc, celo, fantom, optimism, zkSync, polygonMumbai];
const config = createConfig(
  getDefaultConfig({
    appName: "Blocklab-Protocol",   
    alchemyId,
    walletConnectProjectId: "process.env.WALLETCONNECT_PROJECT_ID",
    chains,
    appDescription: "BLOCKSWAP-OX",
    appUrl: "https://family.co", // your app's URL
    appIcon: "https://family.co/logo.png", // your app's icon, no bigger than 1024x1024px (max. 1MB)
  })
);

// Check if the component is mounted before using useEffect
export default function App({ Component, pageProps }: AppProps) {
    const [mounted, setMounted] = useState(false);
    useEffect(() => setMounted(true), []);
return (
<>

<div style={{ padding: "20px" }}>
        <WagmiConfig config={config}>
          <ConnectKitProvider
            theme="auto"
            mode="auto"
            options={{
              disclaimer: (
                <>
                  By connecting your wallet you agree to the{" "}
                  <a
                    target="_blank"
                    rel="noopener noreferrer"
                    href="https://en.wikipedia.org/wiki/Terms_of_service"
                  >
                     Terms of Service </a> {" "}
                    and{" "}
                  <a
                    target="_blank"
                    rel="noopener noreferrer"
                    href="https://en.wikipedia.org/wiki/Privacy_policy"
                  >
                    Privacy Policy
                  </a>
                </>
              ),
            }}
          >{mounted && <Component {...pageProps} />}
          <div className="absolute top-4 right-4"><ConnectKitButton /> </div>
          </ConnectKitProvider>  
        </WagmiConfig>
</div>
</>
 );
};

//export default App;

*/